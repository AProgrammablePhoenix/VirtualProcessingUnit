; expected output:
; 5
; 2
; 10
; I'm an array
; of strings.
; 0
; 1
; 2
; 3
; 4
; 5
; 6
; 7
; 8
; 9

decl string unsigned_number_array static unsigned __int64
decl string string_array static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >

decl string dyn_unum_array dynamic unsigned __int64

decl unsigned_number array1_0 5
decl unsigned_number array1_1 2
decl unsigned_number array1_2 10
decl unsigned_number array1_size 3
decl string array1_name array1

decl string array2_0 I'm an array
decl string array2_1 of strings.
decl unsigned_number array2_size 2
decl string array2_name array2

decl string array3_name dyn_array

decl unsigned_number zero 0
decl unsigned_number one 1
decl unsigned_number two 2

; declArray of array1
setRAX array1_size
push RAX

setSR unsigned_number_array
pushSR 0

setSR array1_name
int ${{N15}}


; declArray of array2
setRAX array2_size
push RAX

setSR string_array
pushSR 0

setSR array2_name
int ${{N15}}


; set indexes of array1
setRAX zero
push RAX
setSR array1_name
pushSR 0
setRDX array1_0
int ${{N16}}

setRAX one
push RAX
setSR array1_name
pushSR 0
setRDX array1_1
int ${{N16}}

setRAX two
push RAX
setSR array1_name
pushSR 0
setRDX array1_2
int ${{N16}}

; set indexes of array2
setRAX zero
push RAX
setSR array2_name
pushSR 0
setSR array2_0
int ${{N16}}

setRAX one
push RAX
setSR array2_name
pushSR 0
setSR array2_1
int ${{N16}}


; fetch array1 indexes
setRAX zero
push RAX
setSR array1_name
pushSR 0
int ${{N17}}
toString RDX
int ${{N6}}

setRAX one
push RAX
setSR array1_name
pushSR 0
int ${{N17}}
toString RDX
int ${{N6}}

setRAX two
push RAX
setSR array1_name
pushSR 0
int ${{N17}}
toString RDX
int ${{N6}}

; fetch array2 indexes
setRAX zero
push RAX
setSR array2_name
pushSR 0
int ${{N17}}
int ${{N6}}

setRAX one
push RAX
setSR array2_name
pushSR 0
int ${{N17}}
int ${{N6}}


; declArray of array3
setRAX zero
push RAX

setSR dyn_unum_array
pushSR 0

setSR array3_name
int ${{N15}}

decl unsigned_number n_loops 9

; set indexes of array3
setRAX zero
push RAX
setSR array3_name
pushSR 0
setRDX zero
int ${{N16}}

decltag looping
inc RAX
push RAX
setSR array3_name
pushSR 0
inc RDX
int ${{N16}}

inc RAX

push RAX
setRBX n_loops
push RBX

cmp 0
pop RBX
pop RAX

dec RAX

movRCX RAX
setRAX two
jl 0

movRAX RCX
lcall looping

; fetch all array3 indexes
setSR array3_name
int ${{N18}}
movRBX RDX
setRAX zero

push RAX
setSR array3_name
pushSR 0
int ${{N17}}
toString RDX
int ${{N6}}

decltag fetch_looping
inc RAX
push RAX
setSR array3_name
pushSR 0
int ${{N17}}
toString RDX
int ${{N6}}

inc RAX

push RAX
push RBX

cmp 0
pop RBX
pop RAX

dec RAX

movRCX RAX
setRAX two
je 0

movRAX RCX
lcall fetch_looping

hlt 0